︠51b95b10-61f0-4506-bf86-1006b0b40a5bs︠
#data for lines (first 100 elements)
#factorization and norm factorization
#June 20, 2017

K.<i> = QuadraticField(-1)
ZI = K.ring_of_integers()


︡8d0b37e3-c721-49cf-b966-c2086d56dd7d︡{"done":true}︡
︠7e510d28-9fd1-4904-a7af-4667b09ea072s︠
#line 1+k+2ki
rows = [["Index","Number","Gaussian Factorization", "Norm Factorization", " Prime?"]]


for j in range(100):
    list = []
    list.append(j)
    list.append(j+1 + 2*j*i)
    list.append(ZI(j+1 + 2*j*i).factor())
    list.append(factor ((j+1)**2+(2*j)**2))
    if ((j+1)**2+(2*j)**2) in Primes():
        list.append("Yes!")
    else:
        list.append(" ")
    rows.append(list)
table(rows)
︡28bff0a9-f9e5-4fae-9cdd-ccf186b26a9f︡{"stderr":"Error in lines 2-12\nTraceback (most recent call last):\n  File \"/cocalc/lib/python2.7/site-packages/smc_sagews/sage_server.py\", line 1025, in execute\n    exec compile(block+'\\n', '', 'single', flags=compile_flags) in namespace, locals\n  File \"\", line 5, in <module>\nNameError: name 'ZI' is not defined\n"}︡{"done":true}︡
︠298513a2-e579-4cc3-81f5-2276f3114821s︠
#line 1+2k+3ki
rows = [["Index", "Number", "Gaussian Factorization", "Norm Factorization", "Is Prime?"]]


for j in range(100):
    list = []
    list.append(j)
    list.append(2*j+1 + 3*j*i)
    list.append(ZI(2*j+1 + 3*j*i).factor())
    list.append(factor ((2*j+1)**2+(3*j)**2))
    if ((2*j+1)**2+(3*j)**2) in Primes():
        list.append("Yes!")
    else:
        list.append(" ")
    rows.append(list)
table(rows)
︡da19c385-d0cd-4e04-bcdf-2c31622de09c︡{"stdout":"  Index   Number        Gaussian Factorization                                  Norm Factorization    Is Prime?\n  0       1             1                                                       1\n  1       3*i + 3       (i + 1) * 3                                             2 * 3^2\n  2       6*i + 5       (-1) * (-6*i - 5)                                       61                    Yes!\n  3       9*i + 7       (-i) * (i + 1) * (2*i + 1) * (2*i + 3)                  2 * 5 * 13\n  4       12*i + 9      (-i - 2)^2 * 3                                          3^2 * 5^2\n  5       15*i + 11     (i + 1) * (2*i + 13)                                    2 * 173\n  6       18*i + 13     (-i) * (i - 4) * (-2*i + 5)                             17 * 29\n  7       21*i + 15     (i + 1) * 3 * (i + 6)                                   2 * 3^2 * 37\n  8       24*i + 17     (2*i + 1) * (-2*i + 13)                                 5 * 173\n  9       27*i + 19     (-1) * (-i - 2) * (i + 1) * (-3*i + 10)                 2 * 5 * 109\n  10      30*i + 21     (-i) * (7*i - 10) * 3                                   3^2 * 149\n  11      33*i + 23     (-1) * (-5*i - 28) * (i + 1)                            2 * 809\n  12      36*i + 25     (i + 4) * (7*i + 8)                                     17 * 113\n  13      39*i + 27     (-1) * (i + 1) * (2*i + 1)^3 * 3                        2 * 3^2 * 5^3\n  14      42*i + 29     (-1) * (-i - 2) * (11*i + 20)                           5 * 521\n  15      45*i + 31     (i + 1) * (7*i + 38)                                    2 * 1493\n  16      48*i + 33     3 * (2*i + 3) * (2*i + 5)                               3^2 * 13 * 29\n  17      51*i + 35     (-1) * (-8*i - 43) * (i + 1)                            2 * 1913\n  18      54*i + 37     (2*i + 1) * (-4*i + 29)                                 5 * 857\n  19      57*i + 39     (-1) * (-i - 2) * (i + 1) * 3 * (-2*i + 7)              2 * 3^2 * 5 * 53\n  20      60*i + 41     (-1) * (-60*i - 41)                                     5281                  Yes!\n  21      63*i + 43     (i + 1) * (10*i + 53)                                   2 * 2909\n  22      66*i + 45     (-i) * (15*i - 22) * 3                                  3^2 * 709\n  23      69*i + 47     (-i) * (-5*i - 4) * (i - 4) * (i + 1) * (2*i + 1)       2 * 5 * 17 * 41\n  24      72*i + 49     (i - 6) * (-i - 2) * (4*i + 5)                          5 * 37 * 41\n  25      75*i + 51     (i + 1) * 3 * (4*i + 21)                                2 * 3^2 * 457\n  26      78*i + 53     (-1) * (-78*i - 53)                                     8893                  Yes!\n  27      81*i + 55     (i + 1) * (13*i + 68)                                   2 * 4793\n  28      84*i + 57     (2*i + 1) * 3 * (-2*i + 15)                             3^2 * 5 * 229\n  29      87*i + 59     (-i) * (-i - 2)^2 * (i + 1) * (2*i + 3) * (i + 4)       2 * 5^2 * 13 * 17\n  30      90*i + 61     90*i + 61                                               11821                 Yes!\n  31      93*i + 63     (i + 1) * 3 * (5*i + 26)                                2 * 3^2 * 701\n  32      96*i + 65     (-1) * (-96*i - 65)                                     13441                 Yes!\n  33      99*i + 67     (-i) * (i + 1) * (2*i + 1) * (23*i + 30)                2 * 5 * 1429\n  34      102*i + 69    (-1) * (-i - 2) * 3 * (9*i + 16)                        3^2 * 5 * 337\n  35      105*i + 71    (i) * (i + 1) * (-2*i + 5) * (-14*i + 9)                2 * 29 * 277\n  36      108*i + 73    108*i + 73                                              16993                 Yes!\n  37      111*i + 75    (i + 1) * 3 * (6*i + 31)                                2 * 3^2 * 997\n  38      114*i + 77    (i) * (-9*i - 26) * (2*i + 1)^2                         5^2 * 757\n  39      117*i + 79    (-1) * (-i - 2) * (i + 1) * (-12*i + 43)                2 * 5 * 1993\n  40      120*i + 81    (i) * (4*i - 11) * (i - 4) * 3                          3^2 * 17 * 137\n  41      123*i + 83    (-1) * (i - 10) * (i + 1) * (3*i + 10)                  2 * 101 * 109\n  42      126*i + 85    (2*i + 3) * (16*i + 39)                                 13 * 1777\n  43      129*i + 87    (-1) * (13*i - 10) * (i + 1) * (2*i + 1) * 3            2 * 3^2 * 5 * 269\n  44      132*i + 89    (-4*i - 11) * (-i - 2) * (i + 6)                        5 * 37 * 137\n  45      135*i + 91    (i + 1) * (2*i + 5) * (-4*i + 21)                       2 * 29 * 457\n  46      138*i + 93    3 * (i + 4) * (9*i + 10)                                3^2 * 17 * 181\n  47      141*i + 95    (-i) * (10*i - 7) * (i + 1) * (-4*i + 9)                2 * 97 * 149\n  48      144*i + 97    (-1) * (10*i - 77) * (2*i + 1)                          5 * 6029\n  49      147*i + 99    (-1) * (-i - 2) * (i + 1) * 3 * (-5*i + 18)             2 * 3^2 * 5 * 349\n  50      150*i + 101   (-i) * (19*i - 16) * (2*i + 7)                          53 * 617\n  51      153*i + 103   (-8*i - 13) * (3*i - 8) * (i + 1)                       2 * 73 * 233\n  52      156*i + 105   (-i) * (35*i - 52) * 3                                  3^2 * 3929\n  53      159*i + 107   (i) * (-37*i - 48) * (i + 1) * (2*i + 1)                2 * 5 * 3673\n  54      162*i + 109   (-i) * (-i - 2)^4 * (5*i + 6)                           5^4 * 61\n  55      165*i + 111   (-i) * (i + 1) * 3 * (2*i + 3)^3                        2 * 3^2 * 13^3\n  56      168*i + 113   (-1) * (-168*i - 113)                                   40993                 Yes!\n  57      171*i + 115   (-1) * (i - 4) * (i + 1) * (15*i + 32)                  2 * 17 * 1249\n  58      174*i + 117   (-1) * (4*i - 31) * (2*i + 1) * 3                       3^2 * 5 * 977\n  59      177*i + 119   (18*i - 65) * (-i - 2) * (i + 1)                        2 * 5 * 4549\n  60      180*i + 121   180*i + 121                                             47041                 Yes!\n  61      183*i + 123   (-3*i - 8) * (i - 6) * (i + 1) * 3                      2 * 3^2 * 37 * 73\n  62      186*i + 125   (-1) * (-186*i - 125)                                   50221                 Yes!\n  63      189*i + 127   (-6*i - 5) * (i + 1) * (2*i + 1)^2 * (i + 4)            2 * 5^2 * 17 * 61\n  64      192*i + 129   (-5*i - 4) * (-i - 2) * 3 * (-2*i + 5)                  3^2 * 5 * 29 * 41\n  65      195*i + 131   (-1) * (12*i - 23) * (i + 1) * (4*i + 5)                2 * 41 * 673\n  66      198*i + 133   198*i + 133                                             56893                 Yes!\n  67      201*i + 135   (i + 1) * 3 * (11*i + 56)                               2 * 3^2 * 3257\n  68      204*i + 137   (2*i + 1) * (2*i + 3) * (-20*i + 23)                    5 * 13 * 929\n  69      207*i + 139   (-1) * (-i - 2) * (i + 1) * (-21*i + 76)                2 * 5 * 6217\n  70      210*i + 141   (-i) * (47*i - 70) * 3                                  3^2 * 7109\n  71      213*i + 143   (-1) * (-35*i - 178) * (i + 1)                          2 * 32909\n  72      216*i + 145   (i) * (-2*i + 7) * (-11*i + 34)                         53 * 1277\n  73      219*i + 147   (-i) * (i + 1) * (2*i + 1) * 3 * (17*i + 22)            2 * 3^2 * 5 * 773\n  74      222*i + 149   (i - 4) * (-i - 2) * (2*i + 5)^2                        5 * 17 * 29^2\n  75      225*i + 151   (i + 1) * (37*i + 188)                                  2 * 36713\n  76      228*i + 153   (-i) * (51*i - 76) * 3                                  3^2 * 8377\n  77      231*i + 155   (-1) * (-38*i - 193) * (i + 1)                          2 * 38693\n  78      234*i + 157   (-1) * (16*i - 125) * (2*i + 1)                         5 * 15881\n  79      237*i + 159   (i) * (-10*i - 9) * (-i - 2)^2 * (i + 1) * 3            2 * 3^2 * 5^2 * 181\n  80      240*i + 161   (i + 4)^4                                               17^4\n  81      243*i + 163   (i + 1) * (2*i + 3) * (i + 6) * (-5*i + 8)              2 * 13 * 37 * 89\n  82      246*i + 165   (-i) * (55*i - 82) * 3                                  3^2 * 9749\n  83      249*i + 167   (i + 1) * (2*i + 1) * (-8*i + 5) * (i + 10)             2 * 5 * 89 * 101\n  84      252*i + 169   (-67*i - 118) * (-i - 2)                                5 * 18413\n  85      255*i + 171   (i + 1) * 3 * (14*i + 71)                               2 * 3^2 * 5237\n  86      258*i + 173   (-1) * (-258*i - 173)                                   96493                 Yes!\n  87      261*i + 175   (-1) * (5*i - 22) * (i + 1) * (4*i + 9)                 2 * 97 * 509\n  88      264*i + 177   (i) * (-7*i - 20) * (2*i + 1)^2 * 3                     3^2 * 5^2 * 449\n  89      267*i + 179   (27*i - 98) * (-i - 2) * (i + 1)                        2 * 5 * 10333\n  90      270*i + 181   (-12*i - 23) * (-6*i - 11)                              157 * 673\n  91      273*i + 183   (-1) * (i - 4) * (i + 1) * 3 * (8*i + 17)               2 * 3^2 * 17 * 353\n  92      276*i + 185   (-4*i - 31) * (-8*i - 7)                                113 * 977\n  93      279*i + 187   (-1) * (10*i - 17) * (i + 1) * (2*i + 1) * (-2*i + 5)   2 * 5 * 29 * 389\n  94      282*i + 189   (i - 14) * (-i - 2) * 3 * (2*i + 3)                     3^2 * 5 * 13 * 197\n  95      285*i + 191   (i + 1) * (2*i + 15) * (i + 16)                         2 * 229 * 257\n  96      288*i + 193   288*i + 193                                             120193                Yes!\n  97      291*i + 195   (-1) * (i - 20) * (i + 1) * 3 * (i + 4)                 2 * 3^2 * 17 * 401\n  98      294*i + 197   (-1) * (i - 6) * (2*i + 1) * (i + 26)                   5 * 37 * 677\n  99      297*i + 199   (-1) * (-i - 2) * (i + 1) * (-30*i + 109)               2 * 5 * 12781"}
︠f3ea0ea6-aaee-45bd-bd0c-b86866ffc52as︠

#line 1+2k+9ki
rows = [["Index", "Number", "Gaussian Factorization", "Norm Factorization","Is Prime?"]]
for j in range(100):
    list = []
    list.append(j)
    list.append(2*j+1 + 9*j*i)
    list.append(ZI(2*j+1 + 9*j*i).factor())
    list.append(factor ((2*j+1)**2+(9*j)**2))
    if ((2*j+1)**2+9*j**2) in Primes():
        list.append("Yes!")
    else:
        list.append('')
    rows.append(list)
table(rows)
︡b9a82b44-4399-4cd8-aacb-41b06d025e04︡{"stdout":"  Index   Number        Gaussian Factorization                                 Norm Factorization     Is Prime?\n  0       1             1                                                      1\n  1       9*i + 3       (-1) * (-i - 2) * (i + 1) * 3                          2 * 3^2 * 5\n  2       18*i + 5      (i) * (-5*i + 18)                                      349                    Yes!\n  3       27*i + 7      (i + 1) * (10*i + 17)                                  2 * 389\n  4       36*i + 9      (-i) * (i - 4) * 3^2                                   3^4 * 17\n  5       45*i + 11     (i + 1) * (2*i + 5) * (i + 6)                          2 * 29 * 37\n  6       54*i + 13     (i) * (16*i - 19) * (-i - 2)                           5 * 617\n  7       63*i + 15     (-1) * (-8*i - 13) * (i + 1) * 3                       2 * 3^2 * 233\n  8       72*i + 17     (2*i + 3) * (14*i + 15)                                13 * 421\n  9       81*i + 19     (i) * (i + 1) * (-50*i + 31)                           2 * 3461\n  10      90*i + 21     (-3*i - 8) * (-3*i - 2) * 3                            3^2 * 13 * 73\n  11      99*i + 23     (-3*i - 32) * (-i - 2) * (i + 1)                       2 * 5 * 1033\n  12      108*i + 25    (-i) * (25*i - 108)                                    12289\n  13      117*i + 27    (i) * (i + 1) * 3^2 * (-8*i + 5)                       2 * 3^4 * 89\n  14      126*i + 29    (-i) * (3*i - 8) * (2*i + 15)                          73 * 229\n  15      135*i + 31    (-1) * (-10*i - 9) * (i + 1) * (-2*i + 7)              2 * 53 * 181\n  16      144*i + 33    (-i - 2)^2 * 3 * (4*i + 9)                             3^2 * 5^2 * 97\n  17      153*i + 35    (-1) * (-8*i - 7) * (i + 1) * (-3*i + 10)              2 * 109 * 113\n  18      162*i + 37    (-i) * (11*i - 20) * (2*i + 7)                         53 * 521\n  19      171*i + 39    (i + 1) * 3 * (22*i + 35)                              2 * 3^2 * 1709\n  20      180*i + 41    (-i) * (i - 14) * (-2*i + 13)                          173 * 197              Yes!\n  21      189*i + 43    (-1) * (i - 4)^2 * (-i - 2) * (i + 1) * (2*i + 3)      2 * 5 * 13 * 17^2\n  22      198*i + 45    (-i) * (5*i - 22) * 3^2                                3^4 * 509\n  23      207*i + 47    (17*i - 38) * (-3*i - 2) * (i + 1)                     2 * 13 * 1733\n  24      216*i + 49    (-i) * (49*i - 216)                                    49057\n  25      225*i + 51    (i) * (i + 1) * 3 * (-46*i + 29)                       2 * 3^2 * 2957\n  26      234*i + 53    (-i) * (-i - 2) * (-2*i + 5) * (-6*i + 19)             5 * 29 * 397           Yes!\n  27      243*i + 55    (9*i - 26) * (-5*i - 4) * (i + 1)                      2 * 41 * 757\n  28      252*i + 57    (-i) * (19*i - 84) * 3                                 3^2 * 7417\n  29      261*i + 59    (i) * (i + 1) * (-160*i + 101)                         2 * 35801\n  30      270*i + 61    (-i) * (7*i - 12) * (6*i + 19)                         193 * 397              Yes!\n  31      279*i + 63    (-1) * (-i - 2) * (i + 1) * 3^2 * (i + 10)             2 * 3^4 * 5 * 101\n  32      288*i + 65    (5*i + 6) * (23*i + 30)                                61 * 1429              Yes!\n  33      297*i + 67    (-i) * (182*i - 115) * (i + 1)                         2 * 46349\n  34      306*i + 69    3 * (2*i + 3) * (2*i + 5)^2                            3^2 * 13 * 29^2\n  35      315*i + 71    (i) * (28*i - 25) * (i - 6) * (i + 1)                  2 * 37 * 1409\n  36      324*i + 73    (-3*i - 2) * (-i - 2) * (-4*i + 41)                    5 * 13 * 1697          Yes!\n  37      333*i + 75    (-i) * (68*i - 43) * (i + 1) * 3                       2 * 3^2 * 6473\n  38      342*i + 77    (i) * (-2*i - 85) * (i - 4)                            17 * 7229\n  39      351*i + 79    (-1) * (-6*i - 5) * (i + 1) * (-10*i + 31)             2 * 61 * 1061\n  40      360*i + 81    3^2 * (4*i + 5)^2                                      3^4 * 41^2\n  41      369*i + 83    (-1) * (19*i - 50) * (-i - 2)^2 * (i + 1)              2 * 5^2 * 2861\n  42      378*i + 85    (i) * (i + 6) * (-24*i + 59)                           37 * 4057\n  43      387*i + 87    (-i) * (79*i - 50) * (i + 1) * 3                       2 * 3^2 * 8741\n  44      396*i + 89    (-i) * (i - 16) * (-4*i + 25)                          257 * 641\n  45      405*i + 91    (-18*i - 23) * (i - 10) * (i + 1)                      2 * 101 * 853\n  46      414*i + 93    (-49*i - 40) * (-i - 2) * 3                            3^2 * 5 * 4001\n  47      423*i + 95    (i + 1) * (2*i + 3) * (-2*i + 85)                      2 * 13 * 7229\n  48      432*i + 97    (-i) * (97*i - 432)                                    196033\n  49      441*i + 99    (-1) * (-3*i - 2) * (i + 1) * 3^2 * (-4*i + 9)         2 * 3^4 * 13 * 97\n  50      450*i + 101   (i) * (-101*i + 450)                                   212701\n  51      459*i + 103   (-1) * (-i - 2) * (i + 1) * (15*i + 148)               2 * 5 * 22129\n  52      468*i + 105   (i) * 3 * (-35*i + 156)                                3^2 * 25561\n  53      477*i + 107   (-1) * (-185*i - 292) * (i + 1)                        2 * 119489\n  54      486*i + 109   (i) * (-109*i + 486)                                   248077\n  55      495*i + 111   (-i) * (i - 4) * (i + 1) * 3 * (-2*i + 5)^2            2 * 3^2 * 17 * 29^2\n  56      504*i + 113   (-i) * (-i - 2) * (-8*i + 13) * (-2*i + 15)            5 * 229 * 233          Yes!\n  57      513*i + 115   (-1) * (-199*i - 314) * (i + 1)                        2 * 138197\n  58      522*i + 117   (-i) * (13*i - 58) * 3^2                               3^4 * 3533\n  59      531*i + 119   (i + 1) * (206*i + 325)                                2 * 148061\n  60      540*i + 121   (-i) * (111*i - 106) * (2*i + 3)                       13 * 23557             Yes!\n  61      549*i + 123   (-6*i - 59) * (-i - 2) * (i + 1) * 3                   2 * 3^2 * 5 * 3517\n  62      558*i + 125   (-1) * (-3*i - 2) * (57*i + 148)                       13 * 25153             Yes!\n  63      567*i + 127   (-1) * (-14*i - 75) * (i + 1) * (2*i + 5)              2 * 29 * 5821\n  64      576*i + 129   (-i) * (43*i - 192) * 3                                3^2 * 38713\n  65      585*i + 131   (-i) * (358*i - 227) * (i + 1)                         2 * 179693\n  66      594*i + 133   (-1) * (-50*i - 111) * (-i - 2)^2                      5^2 * 14821            Yes!\n  67      603*i + 135   (-1) * (-26*i - 41) * (i + 1) * 3^2                    2 * 3^4 * 2357\n  68      612*i + 137   (-1) * (-5*i - 4) * (-2*i + 7) * (9*i + 10)            41 * 53 * 181\n  69      621*i + 139   (i) * (i + 1) * (-380*i + 241)                         2 * 202481\n  70      630*i + 141   (i) * 3 * (-47*i + 210)                                3^2 * 46309\n  71      639*i + 143   (-1) * (-i - 2) * (i + 1) * (2*i + 7) * (-5*i + 28)    2 * 5 * 53 * 809\n  72      648*i + 145   (i) * (i - 6) * (i - 4) * (5*i + 26)                   17 * 37 * 701\n  73      657*i + 147   (-1) * (7*i - 10) * (i + 1) * 3 * (2*i + 3)^2          2 * 3^2 * 13^2 * 149\n  74      666*i + 149   (i) * (3*i + 10) * (-32*i + 57)                        109 * 4273\n  75      675*i + 151   (-1) * (-3*i - 2) * (i + 1) * (-55*i + 124)            2 * 13 * 18401\n  76      684*i + 153   (-27*i - 22) * (-i - 2) * 3^2                          3^4 * 5 * 1213\n  77      693*i + 155   (-i) * (23*i - 48) * (i + 1) * (-5*i + 8)              2 * 89 * 2833\n  78      702*i + 157   (-1) * (-19*i + 14) * (-23*i + 20)                     557 * 929\n  79      711*i + 159   (-1) * (-11*i - 26) * (i + 1) * 3 * (i + 6)            2 * 3^2 * 37 * 797\n  80      720*i + 161   (-1) * (-41*i - 56) * (7*i + 8)                        113 * 4817\n  81      729*i + 163   (-i) * (-31*i - 20) * (-i - 2) * (i + 1) * (4*i + 5)   2 * 5 * 41 * 1361\n  82      738*i + 165   (-i) * (55*i - 246) * 3                                3^2 * 63541\n  83      747*i + 167   (-1) * (-3*i - 8) * (i + 1) * (13*i + 62)              2 * 73 * 4013\n  84      756*i + 169   (-i) * (-23*i - 142) * (-2*i + 5)                      29 * 20693\n  85      765*i + 171   (-1) * (-33*i - 52) * (i + 1) * 3^2                    2 * 3^4 * 3793\n  86      774*i + 173   (-1) * (-i - 2) * (2*i + 3) * (29*i + 94)              5 * 13 * 9677          Yes!\n  87      783*i + 175   (i) * (40*i - 53) * (3*i - 8) * (i + 1)                2 * 73 * 4409\n  88      792*i + 177   (i) * (-17*i - 12) * (-3*i - 2)^2 * 3                  3^2 * 13^2 * 433\n  89      801*i + 179   (-102*i - 97) * (i - 4) * (i + 1)                      2 * 17 * 19813\n  90      810*i + 181   (i) * (-181*i + 810)                                   688861\n  91      819*i + 183   (i) * (-i - 2)^3 * (i + 1) * 3 * (12*i + 13)           2 * 3^2 * 5^3 * 313\n  92      828*i + 185   (2*i + 5) * (130*i + 89)                               29 * 24821\n  93      837*i + 187   (-1) * (10*i - 77) * (i + 1) * (5*i + 6)               2 * 61 * 6029\n  94      846*i + 189   (-i) * (21*i - 94) * 3^2                               3^4 * 9277\n  95      855*i + 191   (i + 1) * (332*i + 523)                                2 * 383753\n  96      864*i + 193   (-307*i - 250) * (-i - 2)                              5 * 156749             Yes!\n  97      873*i + 195   (-i) * (178*i - 113) * (i + 1) * 3                     2 * 3^2 * 44453\n  98      882*i + 197   (-i) * (25*i - 64) * (2*i + 13)                        173 * 4721\n  99      891*i + 199   (-1) * (4*i - 179) * (i + 1) * (2*i + 3)               2 * 13 * 32057"}︡{"stdout":"\n"}︡{"done":true}︡
︠1ce8ca2a-4e56-4e84-85d7-2445148750c7s︠

#line 1+41k+84ki
rows = [["Index", "Number", "Gaussian Factorization", "Norm Factorization", "Prime?"]]


for j in range(100):
    list = []
    list.append(j)
    list.append(41*j+1 + 84*j*i)
    list.append(ZI(41*j+1 + 84*j*i).factor())
    list.append(factor ((41*j+1)**2+(84*j)**2))
    if (41*j+1)**2+(84*j)**2 in Primes():
        list.append("Yes!")
    else:
        list.append('')
    rows.append(list)
table(rows)
︡a504bc45-244c-4e27-a9cd-8551ffb48816︡{"stdout":"  Index   Number          Gaussian Factorization                                           Norm Factorization            Prime?\n  0       1               1                                                                1\n  1       84*i + 42       (-i) * (i + 1)^2 * (2*i + 1) * 3 * 7                             2^2 * 3^2 * 5 * 7^2\n  2       168*i + 83      (-1) * (-3*i - 8) * (2*i + 3) * (i + 6)                          13 * 37 * 73\n  3       252*i + 124     (-i - 2) * (i + 1)^5 * (i + 4) * (-2*i + 5)                      2^5 * 5 * 17 * 29\n  4       336*i + 165     (i) * 3 * (-55*i + 112)                                          3^2 * 15569\n  5       420*i + 206     (i + 1)^2 * (-103*i + 210)                                       2^2 * 54709\n  6       504*i + 247     (i) * (-51*i - 100) * (2*i + 1)^2                                5^2 * 12601\n  7       588*i + 288     (-3*i - 2) * (i + 1)^4 * 3 * (2*i + 15)                          2^4 * 3^2 * 13 * 229\n  8       672*i + 329     (-i - 2)^2 * 7 * (4*i + 21)                                      5^2 * 7^2 * 457\n  9       756*i + 370     (-1) * (185*i - 378) * (i + 1)^2                                 2^2 * 177109\n  10      840*i + 411     (i) * 3 * (-137*i + 280)                                         3^2 * 97169\n  11      924*i + 452     (-1) * (10*i - 17) * (i - 4) * (i + 1)^5 * (2*i + 1)             2^5 * 5 * 17 * 389\n  12      1008*i + 493    (-i) * (493*i - 1008)                                            1259113                       Yes!\n  13      1092*i + 534    (i) * (-i - 2) * (i + 1)^2 * 3 * (55*i + 72)                     2^2 * 3^2 * 5 * 8209\n  14      1176*i + 575    (-i) * (575*i - 1176)                                            1713601                       Yes!\n  15      1260*i + 616    (-1) * (i + 1)^4 * (2*i + 3) * 7 * (7*i + 12)                    2^4 * 7^2 * 13 * 193\n  16      1344*i + 657    (i) * (-5*i - 4) * (2*i + 1) * 3 * (22*i + 27)                   3^2 * 5 * 41 * 1213\n  17      1428*i + 698    (i + 1)^2 * (-349*i + 714)                                       2^2 * 631597\n  18      1512*i + 739    (-i) * (-i - 2) * (-598*i + 457)                                 5 * 566453\n  19      1596*i + 780    (-1) * (i + 1)^5 * 3 * (34*i + 99)                               2^5 * 3^2 * 10957\n  20      1680*i + 821    (i) * (-16*i - 31) * (-3*i - 2)^2 * (i + 4)                      13^2 * 17 * 1217\n  21      1764*i + 862    (i) * (-4*i - 439) * (i + 1)^2 * (2*i + 1)                       2^2 * 5 * 192737\n  22      1848*i + 903    (-1) * (-10*i - 9) * 3 * 7 * (2*i + 7)                           3^2 * 7^2 * 53 * 181\n  23      1932*i + 944    (-i - 2) * (i + 1)^4 * (2*i + 5) * (12*i + 43)                   2^4 * 5 * 29 * 1993\n  24      2016*i + 985    (i) * (23*i - 68) * (4*i - 31)                                   977 * 5153\n  25      2100*i + 1026   (i) * (-26*i - 55) * (i + 1)^2 * 3 * (4*i + 5)                   2^2 * 3^2 * 41 * 3701\n  26      2184*i + 1067   (-1) * (i - 6) * (2*i + 1) * (3*i + 10) * (-2*i + 17)            5 * 37 * 109 * 293\n  27      2268*i + 1108   (-145*i - 422) * (i + 1)^5                                       2^5 * 199109\n  28      2352*i + 1149   (i - 4) * (-i - 2) * 3 * (2*i + 3)^2 * (-2*i + 7)                3^2 * 5 * 13^2 * 17 * 53\n  29      2436*i + 1190   (-1) * (85*i - 174) * (i + 1)^2 * 7                              2^2 * 7^2 * 37501\n  30      2520*i + 1231   (-1) * (-102*i - 97) * (6*i + 19)                                397 * 19813\n  31      2604*i + 1272   (-i) * (-22*i - 43) * (i + 1)^4 * (2*i + 1)^2 * 3                2^4 * 3^2 * 5^2 * 2333\n  32      2688*i + 1313   (i) * (-2*i + 5) * (-41*i + 554)                                 29 * 308597\n  33      2772*i + 1354   (-3*i - 2) * (-i - 2)^2 * (i + 1)^2 * (60*i + 61)                2^2 * 5^2 * 13 * 7321\n  34      2856*i + 1395   (i) * 3 * (-465*i + 952)                                         3^2 * 1122529\n  35      2940*i + 1436   (i) * (43*i - 40) * (i + 1)^5 * (-4*i + 9)                       2^5 * 97 * 3449\n  36      3024*i + 1477   (-1) * (-2*i - 215) * (2*i + 1) * 7                              5 * 7^2 * 46229\n  37      3108*i + 1518   (-i) * (i + 1)^2 * 3 * (i + 4) * (7*i + 8) * (2*i + 13)          2^2 * 3^2 * 17 * 113 * 173\n  38      3192*i + 1559   (-1) * (-i - 2) * (965*i + 1262)                                 5 * 2523869\n  39      3276*i + 1600   (-122*i - 87) * (i + 1)^4 * (i + 6)                              2^4 * 37 * 22453\n  40      3360*i + 1641   (-38*i - 155) * (-6*i - 5) * 3                                   3^2 * 61 * 25469\n  41      3444*i + 1682   (i) * (130*i - 199) * (i + 1)^2 * (2*i + 1) * (2*i + 3)          2^2 * 5 * 13 * 56501\n  42      3528*i + 1723   (i) * (-8*i + 13) * (25*i + 256)                                 233 * 66161\n  43      3612*i + 1764   (-i - 2) * (i + 1)^5 * 3 * 7 * (-2*i + 15)                       2^5 * 3^2 * 5 * 7^2 * 229\n  44      3696*i + 1805   (i) * (51*i - 260) * (4*i - 15)                                  241 * 70201\n  45      3780*i + 1846   (i - 14) * (i - 4) * (i + 1)^2 * (-5*i + 36)                     2^2 * 17 * 197 * 1321\n  46      3864*i + 1887   (i) * (-17*i - 12) * (3*i - 8) * (-3*i - 2) * (2*i + 1) * 3      3^2 * 5 * 13 * 73 * 433\n  47      3948*i + 1928   (i) * (-5*i - 18) * (i + 1)^4 * (-39*i + 44)                     2^4 * 349 * 3457\n  48      4032*i + 1969   (-1) * (13*i - 80) * (-18*i - 17) * (-i - 2)                     5 * 613 * 6569\n  49      4116*i + 2010   (i + 1)^2 * 3 * (-335*i + 686)                                   2^2 * 3^2 * 582821\n  50      4200*i + 2051   (-1) * (-35*i - 78) * (5*i + 6) * 7                              7^2 * 61 * 7309\n  51      4284*i + 2092   (-1) * (i + 1)^5 * (2*i + 1) * (-264*i + 269)                    2^5 * 5 * 142057\n  52      4368*i + 2133   (-i) * (223*i - 202) * 3 * (2*i + 5)                             3^2 * 29 * 90533\n  53      4452*i + 2174   (-i) * (-673*i - 880) * (-i - 2) * (i + 1)^2                     2^2 * 5 * 1227329\n  54      4536*i + 2215   (2*i + 3) * (i + 4) * (95*i + 326)                               13 * 17 * 115301\n  55      4620*i + 2256   (-i) * (i + 1)^4 * 3 * (-188*i + 385)                            2^4 * 3^2 * 183569\n  56      4704*i + 2297   (-i) * (2*i + 1)^2 * (i + 10) * (38*i + 97)                      5^2 * 101 * 10853\n  57      4788*i + 2338   (i) * (-5*i - 4) * (i + 1)^2 * 7 * (13*i + 58)                   2^2 * 7^2 * 41 * 3533\n  58      4872*i + 2379   (-1) * (-68*i - 355) * (-i - 2)^2 * 3                            3^2 * 5^2 * 130649\n  59      4956*i + 2420   (-3*i - 2) * (i + 1)^5 * (-164*i + 215)                          2^5 * 13 * 73121\n  60      5040*i + 2461   (-1) * (-17*i - 60) * (67*i + 60)                                3889 * 8089\n  61      5124*i + 2502   (-i) * (i + 1)^2 * (2*i + 1) * 3 * (-2*i + 5) * (30*i + 73)      2^2 * 3^2 * 5 * 29 * 6229\n  62      5208*i + 2543   (7*i - 10)^2 * (i - 4) * (-5*i + 8)                              17 * 89 * 149^2\n  63      5292*i + 2584   (-i) * (i - 6) * (-i - 2) * (i + 1)^4 * (-74*i + 79)             2^4 * 5 * 37 * 11717\n  64      5376*i + 2625   (i) * 3 * 7 * (-9*i + 14) * (2*i + 17)                           3^2 * 7^2 * 277 * 293\n  65      5460*i + 2666   (i + 1)^2 * (-1333*i + 2730)                                     2^2 * 9229789\n  66      5544*i + 2707   (2*i + 1) * (4*i + 5) * (-266*i + 339)                           5 * 41 * 185677\n  67      5628*i + 2748   (26*i - 99) * (i + 1)^5 * 3 * (2*i + 3)                          2^5 * 3^2 * 13 * 10477\n  68      5712*i + 2789   (-i) * (-i - 2) * (-2258*i + 1727)                               5 * 8081093\n  69      5796*i + 2830   (-1) * (4*i - 11) * (i + 1)^2 * (-8*i + 5) * (23*i + 18)         2^2 * 89 * 137 * 853\n  70      5880*i + 2871   (i) * 3 * (-957*i + 1960)                                        3^2 * 4757449\n  71      5964*i + 2912   (-1) * (i + 1)^4 * (2*i + 1) * (i + 4) * 7 * (-6*i + 25)         2^4 * 5 * 7^2 * 17 * 661\n  72      6048*i + 2953   (-1) * (-3*i - 2) * (249*i + 1850)                               13 * 3484501\n  73      6132*i + 2994   (-i) * (-309*i - 404) * (-i - 2) * (i + 1)^2 * 3                 2^2 * 3^2 * 5 * 258697\n  74      6216*i + 3035   (i) * (13*i + 22) * (-226*i + 149)                               653 * 73277\n  75      6300*i + 3076   (-3*i - 8) * (i + 1)^5 * (2*i + 7) * (-6*i + 19)                 2^5 * 53 * 73 * 397\n  76      6384*i + 3117   (2*i + 1) * 3 * (i + 6) * (-27*i + 172)                          3^2 * 5 * 37 * 30313\n  77      6468*i + 3158   (i + 1)^2 * (-1579*i + 3234)                                     2^2 * 12951997\n  78      6552*i + 3199   (-1) * (-i - 2) * 7 * (4*i + 9) * (11*i + 46)                    5 * 7^2 * 97 * 2237\n  79      6636*i + 3240   (-i) * (31*i - 146) * (i - 4) * (i + 1)^4 * 3                    2^4 * 3^2 * 17 * 22277\n  80      6720*i + 3281   (62*i - 185) * (-8*i - 7) * (2*i + 3)                            13 * 113 * 38069\n  81      6804*i + 3322   (-7*i - 18) * (i + 1)^2 * (2*i + 1)^2 * (2*i + 5) * (-2*i + 7)   2^2 * 5^2 * 29 * 53 * 373\n  82      6888*i + 3363   (i) * 3 * (-1121*i + 2296)                                       3^2 * 6528257\n  83      6972*i + 3404   (i - 10) * (10*i - 7) * (-i - 2)^3 * (i + 1)^5                   2^5 * 5^3 * 101 * 149\n  84      7056*i + 3445   (9*i + 16) * (243*i + 352)                                       337 * 182953\n  85      7140*i + 3486   (i) * (-3*i - 2) * (i + 1)^2 * 3 * 7 * (7*i + 52)                2^2 * 3^2 * 7^2 * 13 * 2753\n  86      7224*i + 3527   (-175*i - 132) * (13*i - 10) * (2*i + 1)                         5 * 269 * 48049\n  87      7308*i + 3568   (i) * (892*i - 1827) * (i + 1)^4                                 2^4 * 4133593\n  88      7392*i + 3609   (-7*i - 20) * (-i - 2) * 3 * (i + 4) * (i + 14)                  3^2 * 5 * 17 * 197 * 449\n  89      7476*i + 3650   (-1) * (i - 150) * (i + 1)^2 * (-12*i + 25)                      2^2 * 769 * 22501\n  90      7560*i + 3691   (-i) * (115*i - 1558) * (-2*i + 5)                               29 * 2440589\n  91      7644*i + 3732   (10*i - 19) * (i + 1)^5 * (2*i + 1) * 3 * (-3*i + 10)            2^5 * 3^2 * 5 * 109 * 461\n  92      7728*i + 3773   (i) * 7 * (11*i + 20) * (-44*i + 31)                             7^2 * 521 * 2897\n  93      7812*i + 3814   (i) * (-i - 2) * (i + 1)^2 * (2*i + 3) * (35*i + 538)            2^2 * 5 * 13 * 290669\n  94      7896*i + 3855   (-i) * (120*i - 127) * 3 * (5*i + 16)                            3^2 * 281 * 30529\n  95      7980*i + 3896   (i) * (6*i - 11) * (i + 1)^4 * (8*i + 177)                       2^4 * 157 * 31393\n  96      8064*i + 3937   (-1) * (i - 4) * (2*i + 1) * (245*i + 942)                       5 * 17 * 947389\n  97      8148*i + 3978   (-1) * (663*i - 1358) * (i + 1)^2 * 3                            2^2 * 3^2 * 2283733\n  98      8232*i + 4019   (-i) * (-60*i - 167) * (-5*i - 4) * (-3*i - 2) * (-i - 2)        5 * 13 * 41 * 31489\n  99      8316*i + 4060   (-76*i - 221) * (i + 1)^5 * 7                                    2^5 * 7^2 * 54617"}︡{"stdout":"\n"}︡{"done":true}︡
︠3900fc3a-fdea-4352-8469-e3b23ef87827s︠


#line 1+k+3ki
rows = [["Index", "Number", "Gaussian Factorization","Norm", "Norm Factorization", "Is Prime?"]]


for j in range(100):
    list = []
    list.append(j)
    list.append(j+1 + 3*j*i)
    list.append(ZI(j+1 + 3*j*i).factor())
    list.append((j+1)**2+(3*j)**2)
    list.append(factor ((j+1)**2+(3*j)**2))
    if ((j+1)**2+(3*j)**2) in Primes():
        list.append("Yes!")
    else:
        list.append(" ")
    rows.append(list)
table(rows)
︡e081452b-b257-44c8-81ba-2eb4e7032216︡{"stdout":"  Index   Number        Gaussian Factorization                               Norm    Norm Factorization    Is Prime?\n  0       1             1                                                    1       1\n  1       3*i + 2       (-1) * (-3*i - 2)                                    13      13                    Yes!\n  2       6*i + 3       (2*i + 1) * 3                                        45      3^2 * 5\n  3       9*i + 4       (i) * (-4*i + 9)                                     97      97                    Yes!\n  4       12*i + 5      (2*i + 3)^2                                          169     13^2\n  5       15*i + 6      (i) * 3 * (-2*i + 5)                                 261     3^2 * 29\n  6       18*i + 7      (i) * (-7*i + 18)                                    373     373                   Yes!\n  7       21*i + 8      (2*i + 1) * (i + 10)                                 505     5 * 101\n  8       24*i + 9      (-i) * (3*i - 8) * 3                                 657     3^2 * 73\n  9       27*i + 10     (-i) * (10*i - 27)                                   829     829                   Yes!\n  10      30*i + 11     (i) * (-11*i + 30)                                   1021    1021                  Yes!\n  11      33*i + 12     (-i) * (4*i - 11) * 3                                1233    3^2 * 137\n  12      36*i + 13     (2*i + 1) * (2*i + 17)                               1465    5 * 293\n  13      39*i + 14     (i) * (i - 10) * (i - 4)                             1717    17 * 101\n  14      42*i + 15     (-1) * (-3*i - 2) * 3 * (i + 4)                      1989    3^2 * 13 * 17\n  15      45*i + 16     (-i) * (16*i - 45)                                   2281    2281                  Yes!\n  16      48*i + 17     (i) * (-17*i + 48)                                   2593    2593                  Yes!\n  17      51*i + 18     (-i) * (2*i + 1)^2 * 3 * (2*i + 3)                   2925    3^2 * 5^2 * 13\n  18      54*i + 19     (-1) * (-8*i - 7) * (2*i + 5)                        3277    29 * 113\n  19      57*i + 20     (i) * (-8*i + 5) * (4*i + 5)                         3649    41 * 89\n  20      60*i + 21     (-i) * (7*i - 20) * 3                                4041    3^2 * 449\n  21      63*i + 22     (-3*i - 8) * (-6*i - 5)                              4453    61 * 73\n  22      66*i + 23     (-1) * (-4*i - 31) * (2*i + 1)                       4885    5 * 977\n  23      69*i + 24     (-i) * (8*i - 23) * 3                                5337    3^2 * 593\n  24      72*i + 25     (-i) * (6*i - 11) * (i + 6)                          5809    37 * 157\n  25      75*i + 26     (i) * (-26*i + 75)                                   6301    6301                  Yes!\n  26      78*i + 27     (-i) * (9*i - 26) * 3                                6813    3^2 * 757\n  27      81*i + 28     (i) * (-3*i - 2) * (2*i + 1) * (7*i + 8)             7345    5 * 13 * 113\n  28      84*i + 29     (-i) * (7*i - 10) * (2*i + 7)                        7897    53 * 149\n  29      87*i + 30     (-i) * (10*i - 29) * 3                               8469    3^2 * 941\n  30      90*i + 31     (-5*i - 4) * (i - 4) * (2*i + 3)                     9061    13 * 17 * 41\n  31      93*i + 32     (i) * (i + 4) * (-13*i + 20)                         9673    17 * 569\n  32      96*i + 33     (2*i + 1) * 3 * (2*i + 15)                           10305   3^2 * 5 * 229\n  33      99*i + 34     (-i) * (34*i - 99)                                   10957   10957                 Yes!\n  34      102*i + 35    (i) * (-2*i + 5) * (i + 20)                          11629   29 * 401\n  35      105*i + 36    (i) * (i - 6)^2 * 3                                  12321   3^2 * 37^2\n  36      108*i + 37    (-i) * (37*i - 108)                                  13033   13033                 Yes!\n  37      111*i + 38    (2*i + 1) * (7*i + 52)                               13765   5 * 2753\n  38      114*i + 39    (-i) * (13*i - 38) * 3                               14517   3^2 * 1613\n  39      117*i + 40    (-i) * (40*i - 117)                                  15289   15289                 Yes!\n  40      120*i + 41    (-1) * (-3*i - 2) * (9*i + 34)                       16081   13 * 1237\n  41      123*i + 42    (-i) * (14*i - 41) * 3                               16893   3^2 * 1877\n  42      126*i + 43    (-1) * (22*i - 15) * (2*i + 1)^2                     17725   5^2 * 709\n  43      129*i + 44    (2*i + 3) * (23*i + 30)                              18577   13 * 1429\n  44      132*i + 45    (-i) * (15*i - 44) * 3                               19449   3^2 * 2161\n  45      135*i + 46    (-i) * (46*i - 135)                                  20341   20341                 Yes!\n  46      138*i + 47    (-i) * (i - 20) * (-2*i + 7)                         21253   53 * 401\n  47      141*i + 48    (-1) * (i - 4) * (2*i + 1) * 3 * (2*i + 5)           22185   3^2 * 5 * 17 * 29\n  48      144*i + 49    (-1) * (-31*i - 20) * (i + 4)                        23137   17 * 1361\n  49      147*i + 50    (i) * (-50*i + 147)                                  24109   24109                 Yes!\n  50      150*i + 51    (-i) * (17*i - 50) * 3                               25101   3^2 * 2789\n  51      153*i + 52    (-i) * (52*i - 153)                                  26113   26113                 Yes!\n  52      156*i + 53    (2*i + 1) * (5*i + 6) * (-5*i + 8)                   27145   5 * 61 * 89\n  53      159*i + 54    (-4*i - 15) * (-3*i - 2) * 3                         28197   3^2 * 13 * 241\n  54      162*i + 55    (-i) * (55*i - 162)                                  29269   29269                 Yes!\n  55      165*i + 56    (-1) * (-13*i - 12) * (4*i + 9)                      30361   97 * 313\n  56      168*i + 57    (-i) * (13*i - 10) * 3 * (2*i + 3)                   31473   3^2 * 13 * 269\n  57      171*i + 58    (-1) * (-11*i - 80) * (2*i + 1)                      32605   5 * 6521\n  58      174*i + 59    (i) * (-59*i + 174)                                  33757   33757                 Yes!\n  59      177*i + 60    (-i) * (20*i - 59) * 3                               34929   3^2 * 3881\n  60      180*i + 61    (4*i + 5) * (16*i + 25)                              36121   41 * 881\n  61      183*i + 62    (-i) * (15*i - 28) * (i + 6)                         37333   37 * 1009\n  62      186*i + 63    (2*i + 1) * 3 * (4*i + 29)                           38565   3^2 * 5 * 857\n  63      189*i + 64    (i) * (-2*i + 5) * (2*i + 37)                        39817   29 * 1373\n  64      192*i + 65    (-i) * (i - 4) * (-4*i + 49)                         41089   17 * 2417\n  65      195*i + 66    (i) * 3 * (i + 4) * (-9*i + 14)                      42381   3^2 * 17 * 277\n  66      198*i + 67    (-15*i - 56) * (-3*i - 2)                            43693   13 * 3361\n  67      201*i + 68    (-i) * (2*i + 1)^2 * (24*i + 35)                     45025   5^2 * 1801\n  68      204*i + 69    (-i) * (23*i - 68) * 3                               46377   3^2 * 5153\n  69      207*i + 70    (-1) * (-37*i - 48) * (2*i + 3)                      47749   13 * 3673\n  70      210*i + 71    (-1) * (-6*i - 11) * (12*i + 13)                     49141   157 * 313\n  71      213*i + 72    (-4*i - 11) * (-5*i - 4) * 3                         50553   3^2 * 41 * 137\n  72      216*i + 73    (-1) * (i - 6) * (2*i + 1) * (5*i + 16)              51985   5 * 37 * 281\n  73      219*i + 74    (i) * (-74*i + 219)                                  53437   53437                 Yes!\n  74      222*i + 75    (-i) * (25*i - 74) * 3                               54909   3^2 * 6101\n  75      225*i + 76    (-i) * (76*i - 225)                                  56401   56401                 Yes!\n  76      228*i + 77    (i) * (2*i + 5) * (-29*i + 34)                       57913   29 * 1997\n  77      231*i + 78    (2*i + 1) * 3 * (5*i + 36)                           59445   3^2 * 5 * 1321\n  78      234*i + 79    (9*i + 10) * (9*i + 16)                              60997   181 * 337\n  79      237*i + 80    (-1) * (-3*i - 2) * (18*i + 67)                      62569   13 * 4813\n  80      240*i + 81    (-i) * (27*i - 80) * 3                               64161   3^2 * 7129\n  81      243*i + 82    (i) * (3*i - 8) * (i - 4) * (2*i + 7)                65773   17 * 53 * 73\n  82      246*i + 83    (i) * (-6*i - 5) * (2*i + 1) * (2*i + 3) * (i + 4)   67405   5 * 13 * 17 * 61\n  83      249*i + 84    (-i) * (28*i - 83) * 3                               69057   3^2 * 7673\n  84      252*i + 85    (-i) * (85*i - 252)                                  70729   70729                 Yes!\n  85      255*i + 86    (i) * (-86*i + 255)                                  72421   72421                 Yes!\n  86      258*i + 87    (-i) * (29*i - 86) * 3                               74133   3^2 * 8237\n  87      261*i + 88    (-1) * (-17*i - 122) * (2*i + 1)                     75865   5 * 15173\n  88      264*i + 89    (i) * (-89*i + 264)                                  77617   77617                 Yes!\n  89      267*i + 90    (-i) * (30*i - 89) * 3                               79389   3^2 * 8821\n  90      270*i + 91    (-i) * (91*i - 270)                                  81181   81181                 Yes!\n  91      273*i + 92    (10*i - 7) * (-19*i + 14)                            82993   149 * 557\n  92      276*i + 93    (i) * (-3*i - 2) * (2*i + 1)^2 * 3 * (-2*i + 5)      84825   3^2 * 5^2 * 13 * 29\n  93      279*i + 94    (-i) * (94*i - 279)                                  86677   86677                 Yes!\n  94      282*i + 95    (-27*i - 22) * (-3*i - 8)                            88549   73 * 1213\n  95      285*i + 96    3 * (2*i + 3) * (17*i + 22)                          90441   3^2 * 13 * 773\n  96      288*i + 97    (-i) * (97*i - 288)                                  92353   92353                 Yes!\n  97      291*i + 98    (2*i + 1) * (3*i + 10) * (-2*i + 13)                 94285   5 * 109 * 173\n  98      294*i + 99    (i) * (i - 4)^2 * 3 * (i + 6)                        96237   3^2 * 17^2 * 37\n  99      297*i + 100   (i) * (i + 4) * (-2*i + 7) * (-3*i + 10)             98209   17 * 53 * 109"}︡{"stdout":"\n"}︡{"done":true}︡
︠43aa10b9-7d88-4e80-aeb9-183952d4ae0fs︠

def line_table(a,b,c,d):
    rows = [["Index", "Number", "Gaussian Factorization", "Norm Factorization", "Is Prime?"]]
    for j in range(100):
        list = []
        list.append(j)
        ele = a + c*j + (b + d*j)*i
        list.append(a + c*j + (b + d*j)*i)
        list.append(ZI(a + c*j + (b + d*j)*i).factor())
        list.append(factor ((a + c*j)**2+(b+d*j)**2))
        if ((a + c*j)**2+(b+d*j)**2) in Primes():
            list.append("Yes!")
        else:
            list.append('')
        rows.append(list)
    return table(rows)

line_table(1,0,1,5)
︡f84b9db9-2f1e-4999-8e69-f19e6d939aa0︡{"stdout":"  Index   Number        Gaussian Factorization                                 Norm Factorization   Is Prime?\n  0       1             1                                                      1\n  1       5*i + 2       (i) * (-2*i + 5)                                       29                   Yes!\n  2       10*i + 3      (i) * (-3*i + 10)                                      109                  Yes!\n  3       15*i + 4      (-i) * (4*i - 15)                                      241                  Yes!\n  4       20*i + 5      (i - 4) * (-i - 2) * (2*i + 1)                         5^2 * 17\n  5       25*i + 6      (i) * (-6*i + 25)                                      661                  Yes!\n  6       30*i + 7      (-3*i - 8) * (-3*i - 2)                                13 * 73\n  7       35*i + 8      (i) * (-8*i + 35)                                      1289                 Yes!\n  8       40*i + 9      (4*i + 5)^2                                            41^2\n  9       45*i + 10     (i) * (-i - 2) * (2*i + 1)^2 * (i + 4)                 5^3 * 17\n  10      50*i + 11     (i) * (-11*i + 50)                                     2621                 Yes!\n  11      55*i + 12     (i) * (-12*i + 55)                                     3169                 Yes!\n  12      60*i + 13     (-i) * (13*i - 60)                                     3769                 Yes!\n  13      65*i + 14     (i) * (-14*i + 65)                                     4421                 Yes!\n  14      70*i + 15     (i) * (-5*i - 4) * (-i - 2)^2 * (2*i + 1)              5^3 * 41\n  15      75*i + 16     (-i) * (16*i - 75)                                     5881                 Yes!\n  16      80*i + 17     (-i) * (17*i - 80)                                     6689                 Yes!\n  17      85*i + 18     (i) * (-18*i + 85)                                     7549                 Yes!\n  18      90*i + 19     (i) * (-19*i + 90)                                     8461                 Yes!\n  19      95*i + 20     (-i) * (-3*i - 2) * (-i - 2) * (2*i + 1) * (2*i + 5)   5^2 * 13 * 29\n  20      100*i + 21    (i) * (-2*i + 7) * (i + 14)                            53 * 197\n  21      105*i + 22    (-i) * (i - 4) * (i + 26)                              17 * 677\n  22      110*i + 23    (-i) * (3*i - 8) * (2*i + 13)                          73 * 173\n  23      115*i + 24    (i) * (i + 6) * (-7*i + 18)                            37 * 373\n  24      120*i + 25    (5*i - 24) * (-i - 2) * (2*i + 1)                      5^2 * 601\n  25      125*i + 26    (-i) * (26*i - 125)                                    16301                Yes!\n  26      130*i + 27    (-1) * (-6*i - 5) * (i + 4)^2                          17^2 * 61\n  27      135*i + 28    (i) * (-28*i + 135)                                    19009                Yes!\n  28      140*i + 29    (i) * (-29*i + 140)                                    20441                Yes!\n  29      145*i + 30    (6*i - 29) * (-i - 2) * (2*i + 1)                      5^2 * 877\n  30      150*i + 31    (-i) * (-5*i - 28) * (-2*i + 5)                        29 * 809\n  31      155*i + 32    (i) * (i - 26) * (i - 6)                               37 * 677\n  32      160*i + 33    (-1) * (-3*i - 2) * (17*i + 42)                        13 * 2053\n  33      165*i + 34    (i) * (i + 10) * (-5*i + 16)                           101 * 281\n  34      170*i + 35    (-i) * (-4*i - 15) * (-i - 2) * (2*i + 1)^2            5^3 * 241\n  35      175*i + 36    (-i) * (-4*i - 11) * (-8*i + 13)                       137 * 233\n  36      180*i + 37    (-i) * (37*i - 180)                                    33769                Yes!\n  37      185*i + 38    (-i) * (12*i - 23) * (2*i + 7)                         53 * 673\n  38      190*i + 39    (-i) * (i - 4) * (2*i + 47)                            17 * 2213\n  39      195*i + 40    (-i - 2)^2 * (2*i + 1) * (-11*i + 14)                  5^3 * 317\n  40      200*i + 41    (-i) * (41*i - 200)                                    41681                Yes!\n  41      205*i + 42    (-i) * (42*i - 205)                                    43789                Yes!\n  42      210*i + 43    (i) * (-43*i + 210)                                    45949                Yes!\n  43      215*i + 44    (-i) * (23*i - 48) * (i + 4)                           17 * 2833\n  44      220*i + 45    (9*i - 44) * (-i - 2) * (2*i + 1)                      5^2 * 2017\n  45      225*i + 46    (-1) * (-3*i - 2) * (24*i + 59)                        13 * 4057\n  46      230*i + 47    (-i) * (47*i - 230)                                    55109                Yes!\n  47      235*i + 48    (i) * (-48*i + 235)                                    57529                Yes!\n  48      240*i + 49    (i) * (2*i + 5) * (-25*i + 38)                         29 * 2069\n  49      245*i + 50    (i) * (-i - 2) * (2*i + 1) * (4*i + 5) * (5*i + 6)     5^2 * 41 * 61\n  50      250*i + 51    (-i) * (51*i - 250)                                    65101                Yes!\n  51      255*i + 52    (-i) * (-20*i - 19) * (-8*i + 5)                       89 * 761\n  52      260*i + 53    (-1) * (-10*i - 9) * (10*i + 17)                       181 * 389\n  53      265*i + 54    (i) * (-54*i + 265)                                    73141                Yes!\n  54      270*i + 55    (11*i - 54) * (-i - 2) * (2*i + 1)                     5^2 * 3037\n  55      275*i + 56    (-5*i - 4) * (i - 4) * (7*i + 8)                       17 * 41 * 113\n  56      280*i + 57    (-i) * (57*i - 280)                                    81649                Yes!\n  57      285*i + 58    (i) * (-58*i + 285)                                    84589                Yes!\n  58      290*i + 59    (-31*i - 76) * (-3*i - 2)                              13 * 6737\n  59      295*i + 60    (-i - 2) * (2*i + 1)^4 * (-2*i + 5)                    5^5 * 29\n  60      300*i + 61    (-i) * (7*i - 10) * (i + 4) * (i + 6)                  17 * 37 * 149\n  61      305*i + 62    (i) * (16*i - 19) * (-6*i - 11)                        157 * 617\n  62      310*i + 63    (i) * (-63*i + 310)                                    100069               Yes!\n  63      315*i + 64    (-i) * (-7*i - 18) * (-9*i + 14)                       277 * 373\n  64      320*i + 65    (-i) * (-i - 2)^2 * (2*i + 1) * (23*i + 18)            5^3 * 853\n  65      325*i + 66    (-i) * (15*i - 28) * (3*i + 10)                        109 * 1009\n  66      330*i + 67    (-i) * (10*i - 7) * (19*i + 20)                        149 * 761\n  67      335*i + 68    (i) * (-68*i + 335)                                    116849               Yes!\n  68      340*i + 69    (-i) * (i - 6) * (-2*i + 57)                           37 * 3253\n  69      345*i + 70    (14*i - 69) * (-i - 2) * (2*i + 1)                     5^2 * 4957\n  70      350*i + 71    (-i) * (71*i - 350)                                    127541               Yes!\n  71      355*i + 72    (-1) * (-3*i - 2) * (38*i + 93)                        13 * 10093\n  72      360*i + 73    (-i) * (i - 4) * (4*i + 89)                            17 * 7937\n  73      365*i + 74    (-i) * (-4*i - 51) * (-2*i + 7)                        53 * 2617\n  74      370*i + 75    (15*i - 74) * (-i - 2) * (2*i + 1)                     5^2 * 5701\n  75      375*i + 76    (-i) * (11*i - 20) * (5*i + 16)                        281 * 521\n  76      380*i + 77    (-i) * (77*i - 380)                                    150329               Yes!\n  77      385*i + 78    (i + 4) * (2*i + 5) * (12*i + 13)                      17 * 29 * 313\n  78      390*i + 79    (i) * (-79*i + 390)                                    158341               Yes!\n  79      395*i + 80    (-3*i - 8) * (-i - 2) * (2*i + 1) * (-5*i + 8)         5^2 * 73 * 89\n  80      400*i + 81    (-i) * (81*i - 400)                                    166561               Yes!\n  81      405*i + 82    (-i) * (82*i - 405)                                    170749               Yes!\n  82      410*i + 83    (i) * (-83*i + 410)                                    174989               Yes!\n  83      415*i + 84    (i) * (-84*i + 415)                                    179281               Yes!\n  84      420*i + 85    (-8*i - 7) * (-3*i - 2) * (-i - 2) * (2*i + 1)^2       5^3 * 13 * 113\n  85      425*i + 86    (-i) * (86*i - 425)                                    188021               Yes!\n  86      430*i + 87    (i) * (4*i - 31) * (i - 14)                            197 * 977\n  87      435*i + 88    (-27*i - 50) * (-6*i - 5)                              61 * 3229\n  88      440*i + 89    (i) * (-2*i + 5) * (15*i + 82)                         29 * 6949\n  89      445*i + 90    (-1) * (i - 4) * (-i - 2)^2 * (2*i + 1) * (-4*i + 9)   5^3 * 17 * 97\n  90      450*i + 91    (4*i + 5) * (2*i + 7) * (4*i + 9)                      41 * 53 * 97\n  91      455*i + 92    (-i) * (10*i - 29) * (2*i + 15)                        229 * 941\n  92      460*i + 93    (-i) * (i - 16) * (-4*i + 29)                          257 * 857\n  93      465*i + 94    (i) * (-94*i + 465)                                    225061               Yes!\n  94      470*i + 95    (-1) * (-i - 2) * (2*i + 1) * (i + 4) * (-10*i + 21)   5^2 * 17 * 541\n  95      475*i + 96    (-i) * (3*i - 8) * (9*i + 56)                          73 * 3217\n  96      480*i + 97    (-1) * (-5*i - 4) * (35*i + 68)                        41 * 5849\n  97      485*i + 98    (-1) * (-3*i - 2) * (i + 6) * (5*i + 22)               13 * 37 * 509\n  98      490*i + 99    (13*i - 10) * (-23*i + 20)                             269 * 929\n  99      495*i + 100   (-1) * (i - 10)^2 * (-i - 2) * (2*i + 1)               5^2 * 101^2"}︡{"stdout":"\n"}︡{"done":true}︡
︠1a9d51df-82d6-480b-b0b7-514b397743bds︠


factor(234567899876543456789876543456789876543456789987654345678998765434567898765434567898765678765678765787654567879)
︡0177fb71-9088-45d8-8ada-b77d4395b2d8︡{"stderr":"Error in lines 1-1\n"}︡{"stderr":"Traceback (most recent call last):\n  File \"/cocalc/lib/python2.7/site-packages/smc_sagews/sage_server.py\", line 1025, in execute\n    exec compile(block+'\\n', '', 'single', flags=compile_flags) in namespace, locals\n  File \"\", line 1, in <module>\n  File \"/ext/sage/sage-8.1/local/lib/python2.7/site-packages/sage/arith/misc.py\", line 2275, in factor\n    int_ = int_, verbose=verbose)\n  File \"sage/rings/integer.pyx\", line 3741, in sage.rings.integer.Integer.factor (build/cythonized/sage/rings/integer.c:24643)\n    F = factor_using_pari(n, int_=int_, debug_level=verbose, proof=proof)\n  File \"sage/rings/factorint.pyx\", line 352, in sage.rings.factorint.factor_using_pari (build/cythonized/sage/rings/factorint.c:6923)\n    p, e = n.__pari__().factor(proof=proof)\n  File \"cypari2/gen.pyx\", line 4536, in cypari2.gen.Gen.factor\n  File \"src/cysignals/signals.pyx\", line 94, in cysignals.signals.sig_raise_exception\nKeyboardInterrupt\n"}︡{"done":true}︡
︠6bc13b7d-321b-4e11-be67-d8440ad69339s︠

for b in range(1,20):
    print sqrt(34571+b^2)

︡ecc73c1d-ae89-464a-b15d-c799aeef8098︡{"stdout":"2*sqrt(8643)\n5*sqrt(1383)\n2*sqrt(8645)\n9*sqrt(427)\n186\nsqrt(34607)\n2*sqrt(8655)\nsqrt(34635)\n2*sqrt(8663)\nsqrt(34671)\n14*sqrt(177)\nsqrt(34715)\n6*sqrt(965)\n3*sqrt(3863)\n2*sqrt(8699)\nsqrt(34827)\n2*sqrt(8715)\nsqrt(34895)\n2*sqrt(8733)\n"}︡{"done":true}︡
︠ff35f816-f0e3-425e-89c5-b4f7b5659d05s︠



181*191
︡54409109-e1ea-4c6e-800e-ce63b2a85853︡{"stdout":"34571\n"}︡{"done":true}︡
︠23b2c726-d3f9-45d8-b972-01f3add9b61fs︠

gcd(2525891, 4773*5275*5401 - 2^4*3^5*5^2*7^2*11)
︡4531002d-1de3-435e-902e-ed4b6159001e︡{"stdout":"1637\n"}︡{"done":true}︡
︠cd238ab8-a78f-427d-84e8-4fbdeeb766aas︠
52907/277
︡3ee65666-7d2d-406d-939e-14e4d20ca47b︡{"stdout":"191\n"}︡{"done":true}︡
︠df946d2c-ffeb-4fb4-93f3-5f588839b98ds︠
factor(2525891)
︡c0593466-b046-49ed-8030-fa5c575b0574︡{"stdout":"1543 * 1637\n"}︡{"done":true}︡
︠3d00e29a-0691-4642-9c98-40766b741973s︠
541*1223
︡b6237e09-1da9-414b-b995-16f2af314b7a︡{"stdout":"661643\n"}︡{"done":true}︡
︠54f31a17-605d-4f3c-a279-dcb523b9c3bas︠
Mod(4250^2709*2709^2994, 6961)

Mod(437^1614,6961)
︡ed843365-b7b0-4710-b52e-59cc88f4b181︡{"stdout":"2243\n"}︡{"stdout":"2243\n"}︡{"done":true}︡
︠ff7d48cf-b3d8-4cf7-bf30-e896eb2d35ce︠

factor(27212325191)
︡15a59af5-6c45-494e-b461-b9087ebed09f︡{"stdout":"128311 * 212081\n"}︡{"done":true}︡
︠8b36ceed-b7e3-4aef-82f7-86c6f6802ff0s︠

Mod(22054770669,27212325191)^(22824469379)
︡a4e5862b-f3b8-4588-88cf-783faa33c10c︡{"stdout":"12910258780\n"}︡{"done":true}︡
︠f1ea9078-ba8a-4ea7-b6c0-a1e6b4c1dce2︠









